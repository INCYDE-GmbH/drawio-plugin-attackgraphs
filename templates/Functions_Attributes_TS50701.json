{"ag_type":"template","ag_version":1,"default_attributes":[{"name":"Exposure","value":"","iconName":"lock_circle","min":"1","max":"3"},{"name":"Vulnerability","value":"","iconName":"shield","min":"1","max":"3"},{"name":"Impact","value":"","iconName":"flame","min":"1","max":"4"}],"computed_attributes":[{"name":"default","fn":"function(collection){\n    var riskMatrix = {\n        \"V\": {\"fillColor\": \"#cc0000\", \"fontColor\": \"#ffffff\"},\n        \"H\": {\"fillColor\": \"#ff4000\", \"fontColor\": \"#ffffff\"},\n        \"S\": {\"fillColor\": \"#ffdd00\", \"fontColor\": \"#000000\"},\n        \"M\": {\"fillColor\": \"#d4ff00\", \"fontColor\": \"#000000\"},\n        \"L\": {\"fillColor\": \"#40ff00\", \"fontColor\": \"#000000\"}\n    };\n    var likelihoodMatrix = {\n        5: riskMatrix[\"V\"],\n        4: riskMatrix[\"H\"],\n        3: riskMatrix[\"S\"],\n        2: riskMatrix[\"M\"],\n        1: riskMatrix[\"L\"]\n    }\n    \n    var result = {};\n    if (\"_risk\" in collection.cellAttributes) {\n        var risk = collection.cellAttributes[\"_risk\"];\n        result = riskMatrix[risk] || result;\n        result[\"value\"] = risk;\n    } else if (\"_likelihood\" in collection.cellAttributes){\n        var likelihood = parseInt(collection.cellAttributes[\"_likelihood\"]);\n        result = likelihoodMatrix[likelihood] || result;\n        result[\"value\"] = likelihood;\n    } else {\n        var likelihood = parseInt(collection.cellAttributes[\"Exposure\"]) + parseInt(collection.cellAttributes[\"Vulnerability\"]) - 1;\n        result = likelihoodMatrix[likelihood] || result;\n        result[\"value\"] = likelihood;\n    }\n    \n    return result;\n}","id":"dbg60ff69g9a","default":["consequence","activity_w","activity_g","activity_y"]}],"aggregation_functions":[{"name":"default","fn":"function (collection) { \n    var worstNodeLike = collection.childAttributes[0]; \n    var worstNodeRisk = collection.childAttributes[0]; \n    var maxLikelihood = 0; \n    var maxRisk = \"L\"; \n    var maxImpactLike = 0; \n    var maxImpactRisk = null; \n    var updatedImpacts = [];\n    var hadEdgeWeight = false; \n    var riskMatrix = { \n        \"D\": [\"L\", \"L\", \"L\", \"M\", \"S\"], \n        \"C\": [\"L\", \"L\", \"M\", \"S\", \"H\"], \n        \"B\": [\"L\", \"M\", \"S\", \"H\", \"H\"], \n        \"A\": [\"M\", \"S\", \"H\", \"H\", \"V\"] \n    }; \n    var edgeWeights = [\"D\", \"C\", \"B\", \"A\"]; \n \n    /* \n    Returns \n        - < 0 if risk1 < risk2 \n        - = 0 if risk1 = risk2 \n        - > 0 if risk1 > risk2 \n        - null if either risk is not in [\"L\", \"M\", \"S\", \"H\", \"V\"] \n    */ \n    var compareRisk = function(risk1, risk2) { \n        var values = [\"L\", \"M\", \"S\", \"H\", \"V\"]; \n        var index_risk1 = values.indexOf(risk1); \n        var index_risk2 = values.indexOf(risk2); \n \n        if (index_risk1 == -1 || index_risk2 == -1) { \n            return null; \n        } \n        return index_risk1 - index_risk2; \n    } \n    collection.childAttributes.forEach(function(child) { \n        var likelihood = 0; \n \n        if (\"_likelihood\" in child.attributes) { \n            likelihood = child.attributes[\"_likelihood\"]; \n        } else if (\"Exposure\" in child.attributes && \"Vulnerability\" in child.attributes) { \n            likelihood = parseInt(child.attributes[\"Exposure\"]) + parseInt(child.attributes[\"Vulnerability\"]) - 1; \n        } \n \n        if (edgeWeights.indexOf(child.edgeWeight) >= 0) { \n            hadEdgeWeight = true;\n            \n            var reduceImpact = 0; \n            if (\"_impact\" in child.attributes) { \n                reduceImpact = parseInt(child.attributes[\"_impact\"]); \n            } else if (\"Impact\" in child.attributes) { \n                reduceImpact = parseInt(child.attributes[\"Impact\"]); \n            } \n            var idxImpact = Math.max(Math.min(edgeWeights.indexOf(child.edgeWeight) - reduceImpact, edgeWeights.length), 0); \n            var impact = edgeWeights[idxImpact];\n            updatedImpacts.push(child.id + ':' + impact);\n            \n            var risk = riskMatrix[impact][likelihood - 1]; \n            if (!maxImpactRisk) { \n                maxImpactRisk = impact; \n            } \n            if (compareRisk(risk, maxRisk) > 0) { \n                maxRisk = risk; \n                maxLikelihood = likelihood; \n                maxImpactRisk = impact; \n                worstNodeRisk = child; \n            } \n        } else { \n            if (likelihood > maxLikelihood) { \n                maxLikelihood = likelihood; \n                worstNodeLike = child; \n            } \n            if (\"_impact\" in child.attributes) { \n                maxImpactLike = Math.max(maxImpactLike, child.attributes[\"_impact\"]); \n            } else if (\"Impact\" in child.attributes) { \n                maxImpactLike = Math.max(maxImpactLike, child.attributes[\"Impact\"]); \n            } \n        } \n    }); \n \n    if(hadEdgeWeight) { \n        var result = {\"_risk\": maxRisk, \"_marking\": worstNodeRisk.id}; \n        if (maxImpactRisk) { \n            result.Impact = maxImpactRisk; \n        } \n        if (updatedImpacts.length > 0) {\n            result._weight = updatedImpacts.join(';');\n        }\n        return result; \n    } else { \n        var result = {\"_likelihood\": maxLikelihood, \"_marking\": worstNodeLike.id}; \n        if (maxImpactLike) { \n            result._impact = maxImpactLike; \n        } \n        return result; \n    } \n} \n","id":"6b1d22791hih8","default":["consequence","activity_w","or","link"]},{"name":"AND","fn":"function(collection){\n\n    var product = 1;\n    var n = 0;\n    var ids = [];\n\n    collection.childAttributes.forEach(function(child){        \n        var likelihood = (\"_likelihood\" in child.attributes)\n            ? parseInt(child.attributes[\"_likelihood\"])\n            : parseInt(child.attributes[\"Exposure\"]) + parseInt(child.attributes[\"Vulnerability\"]) - 1;\n        n += 1;\n        product *= likelihood;\n        \n        ids.push(child.id);\n    });\n\n    product = Math.ceil(product / Math.pow(5, n-1));\n    result = {\"_likelihood\": product, \"_marking\": ids.join(\";\")};\n\n    // Calc impact\n    var impact = 0;\n    collection.childAttributes.forEach(function(child){\n        if ('_impact' in child.attributes) {\n            impact = Math.max(child.attributes['_impact'], impact);\n        } else if ('Impact' in child.attributes) {\n            impact = Math.max(child.attributes['Impact'], impact);\n        }\n    });\n    if (impact) {\n        result._impact = impact;\n    }\n\n    return result;\n}","id":"gf0d4f199018","default":["and"]},{"name":"Leaf Node","fn":"function(collection){ \n    result = {}; \n    for (localAttribute in collection.localAttributes){ \n        value = parseInt(collection.localAttributes[localAttribute]); \n        collection.childAttributes.forEach(function(child){ \n            if (localAttribute in child.attributes) { \n                v = parseInt(child.attributes[localAttribute]); \n                if (!isNaN(v)) { \n                    value -= v; \n                } \n            } \n        }); \n        if (localAttribute in collection.globalAttributes){ \n            value = Math.max(collection.globalAttributes[localAttribute].min, Math.min(collection.globalAttributes[localAttribute].max, value)); \n        } \n        result[localAttribute] = value; \n    }\n    \n    // Calculate impact\n    var impact = 0;\n    collection.childAttributes.forEach(function(child){\n        if ('Impact' in child.attributes) {\n            impact = Math.max(child.attributes['Impact'], impact);\n        }\n    });\n    if (impact) {\n        result._impact = impact;\n    }\n    \n    return result; \n}","id":"jig393i6f4dh9","default":["activity_g","activity_y"]}]}